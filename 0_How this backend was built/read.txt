On my local computer, I installed Python and PostgreSQL.
My computer uses Windows OS, so I had to install OpenSSL from https://slproweb.com/products/Win32OpenSSL.html for the SSL certificates I want to implement in my PostgreSQL instance.
I created a directory to store OpenSSL files and generated the SSL keys.
I enabled SSL in my PostgreSQL instance/service.
I created a Python virtual environment, installed FastAPI dependencies, and activated it in cmd. Of course, I also added it to .gitignore.
I created a user and password for postgresql, values have to change in prodction deployment: CREATE USER fastapi WITH PASSWORD 'mypassword';
I Created a DB: CREATE DATABASE proveo;
I started using Alembic: pip install alembic, alembic init alembic;
I modified alembic.ini so it is uselful and added the models.py files to connect alembic to the database
I made sure config.py , .env, models.py and alembic env.py had the correct configuration/ values
I created the first migration file without running the upgrade command, evaluated the creation of schema as first step and modify everything accordingly
To create a version is with this: alembic revision -m "create fastapi schema and tables"
To go to the head, use this: alembic upgrade head
I created a version to add materialized view for magic word search
I built the asyncpg pool connection in connection.py
I built the retry logic for the queries in the db_retry.py 
Added the transaction logic using the sandwich patter in transactions.py
Added the routers logic as a esqueleton ,and modify main to also  reflect the adding of the routers and a mini middleware configuration.
Decided to add a middleware file in the api to manage:Request/Response Logging, CORS, Control cross-origin requests, Set allowed origins, methods, headers, Security Headers, Add security headers (X-Frame-Options, CSP, etc.), Remove sensitive headers from responses, Implement HTTPS redirects
Decided to cache using redis for certain endpoints
Decided to manage csrf token and jwt in files separated
All things NOT handled by the fastAPI middleware is going to be handled by the Nginx middleware
Explore database health  check proposed by Claude, you will have logs for requests and db check to take decisions
Installed Redis Locally, is like postgres, but i am running it as a docker container
Added the first endpoint , sign up, having in cosideration alembic, transaction, connection, settings, retry, main, schemas